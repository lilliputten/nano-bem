{"version":3,"sources":["../src/BemEntity.js"],"names":["$","window","require","config","BEMDOM","inherit","modDelim","modValDelim","Events","BemEntity","__constructor","params","props","_modsCache","Object","assign","entityClass","_lastProto","block","_events","events","emit","eventType","args","Array","from","arguments","splice","error","Error","console","Event","syntheticEvent","bemTarget","unshift","apply","getBlockName","getElemName","elem","getEntityName","entityName","getModEntityClassName","modName","modVal","name","getModEntityName","getUniqueId","options","_uniqId","getFlag","getMod","getId","_id","findChildElems","domElem","results","findEntities","findChildElem","findChildBlocks","findChildBlock","findMixedBlocks","select","findMixedBlock","findParentBlocks","findParentBlock","findParentElems","findParentElem","clearElemsCache","_elemsCache","_elem","elemName","entity","getAllMods","val","hasMod","typeModVal","toString","res","length","_delModClass","className","hasClass","removeClass","_setModClass","addClass","setMod","_processingMods","oldVal","beforeSetMod","onSetMod","modProps","String","delMod","toggleMod","wasInited","__inited"],"mappings":"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","sourcesContent":["/** @module BemEntity\n *  @since 2019.03.14, 09:26\n *  @changed 2019.06.11, 10:26\n */\n\nconst $ = (window && window.$) || require('jquery'); // TODO: Use configuration or build options to select jquery: global or as module\n// const $ = require('jquery');\n\nconst { config } = require('./config');\n\nconst { BEMDOM } = require('./BEMDOM');\n\nconst inherit = require('inherit');\n\nconst { /* elemDelim, */ modDelim, modValDelim } = config;\n\nconst Events = require('./Events').default;\n\n/** inherit BemEntity */\nconst BemEntity = inherit(/** @lends BemEntity.prototype */ {\n\n  __constructor: function({ params, ...props } = {}) {\n    this._modsCache = {};\n    this.params = Object.assign({}, params);\n    Object.assign(this, props);\n    const { entityClass } = props;\n    this._lastProto = entityClass;\n    this.block = entityClass && entityClass.block;\n    // TODO 2019.03.15, 08:32 -- Events factory?\n    this._events = new Events();\n  },\n\n  // Events...\n\n  /** Get events manager\n   * @return {object}\n   */\n  events: function() {\n    return this._events;\n  },\n  /** Emit event from this instance\n   * @param {string} eventType\n   * @param {jQuery.Event} [event]\n   * @param {*} ...args\n   */\n  emit: function(eventType, args) {\n\n    args = Array.from(arguments).splice(1) || [];\n\n    if (!eventType) {\n      var error = new Error('emit: Unspecified eventType');\n      console.error(error); // eslint-disable-line no-console\n      /*DEBUG*/ debugger; // eslint-disable-line no-debugger\n      throw error;\n    }\n\n    // If no event passed in arguments then creating our own event...\n    if (!(args[0] instanceof $.Event)) {\n      // TODO: Make complete synthetic event realization?\n      var syntheticEvent = {\n        eventType,\n        bemTarget: this,\n      };\n      args.unshift(eventType, syntheticEvent);\n    }\n\n    var events = this.events();\n    events && events.emit.apply(events, args);\n\n  },\n\n  // Entiry indetification...\n\n  getBlockName: function() {\n    return this.entityClass.block;\n  },\n\n  getElemName: function() {\n    return this.entityClass.elem;\n  },\n\n  /** Get block/elem name without mod specificators\n   * @return {string}\n   */\n  getEntityName: function() {\n    return this.entityName;\n  },\n  /** Get block/elem name without mod specificators\n   * @param {string} modName\n   * @param {string} [modVal]\n   * @return {string}\n   */\n  getModEntityClassName: function(modName, modVal) {\n    let name = this.entityName;\n    name += modDelim + modName;\n    if (modVal && modVal !== true) {\n      name += modValDelim + modVal;\n    }\n    return name;\n  },\n  /** Get block/elem name without mod specificators\n   * @param {string} modName\n   * @param {string} [modVal]\n   * @return {string}\n   */\n  getModEntityName: function(modName, modVal) {\n    return this.getModEntityClassName(modName, modVal);\n  },\n\n  /**\n   * @param {object} [options]\n   * @param {string} [options.prefix='uniq_']\n   * @param {string} [options.postfix]\n   * @return {string}\n   */\n  getUniqueId: function(options) {\n    if (!this._uniqId) {\n      this._uniqId = BEMDOM.getUniqueId(this, options);\n    }\n    return this._uniqId;\n  },\n\n  /** Get value from params or mods\n   * @param {string} name\n   * @return {*}\n   */\n  getFlag: function(name) {\n    return this.params[name] || this.getMod(name);\n  },\n\n  /** Get entity id (from params or mods) or create unique id\n   * @return {string}\n   */\n  getId: function() {\n    if (!this._id) {\n      this._id = this.getFlag('id') || this.getUniqueId();\n    }\n    return this._id;\n  },\n\n  // Traverse...\n\n  /**\n   * @param {string|object} elem - elem name or elem specs\n   * @return {BemEntity[]}\n   */\n  findChildElems: function(elem) {\n    // Single elem name?\n    let props = (typeof elem === 'string') ? { elem } : elem;\n    const { domElem, block } = this;\n    props = Object.assign({ domElem, block }, props);\n    const results = BEMDOM.findEntities(props);\n    return results;\n  },\n  /**\n   * @param {string|object} elem - elem name or elem specs\n   * @return {BemEntity|undefined}\n   */\n  findChildElem: function(elem) {\n    const results = this.findChildElems(elem);\n    return results && results[0];\n  },\n  /**\n   * @param {string|object} block - block name or block specs\n   * @return {BemEntity[]}\n   */\n  findChildBlocks: function(block) {\n    // Single block name?\n    let props = (typeof block === 'string') ? { block } : block;\n    const { domElem } = this;\n    props = Object.assign({ domElem }, props);\n    const results = BEMDOM.findEntities(props);\n    return results;\n  },\n  /**\n   * @param {string|object} block - block name or block specs\n   * @return {BemEntity|undefined}\n   */\n  findChildBlock: function(block) {\n    const results = this.findChildBlocks(block);\n    return results && results[0];\n  },\n  /**\n   * @param {string|object} block - block name or block specs\n   * @return {BemEntity[]}\n   */\n  findMixedBlocks: function(block) {\n    // Single block name?\n    let props = (typeof block === 'string') ? { block } : block;\n    const { domElem } = this;\n    const select = 'filter';\n    props = Object.assign({ select, domElem }, props);\n    const results = BEMDOM.findEntities(props);\n    return results;\n  },\n  /**\n   * @param {string|object} block - block name or block specs\n   * @return {BemEntity|undefined}\n   */\n  findMixedBlock: function(block) {\n    const results = this.findMixedBlocks(block);\n    return results && results[0];\n  },\n  /**\n   * @param {string|object} block - block name or block specs\n   * @return {BemEntity[]}\n   */\n  findParentBlocks: function(block) {\n    // Single block name?\n    let props = (typeof block === 'string') ? { block } : block;\n    const { domElem } = this;\n    const select = 'parents'; // 'closest';\n    props = Object.assign({ select, domElem }, props);\n    const results = BEMDOM.findEntities(props);\n    return results;\n  },\n  /**\n   * @param {string|object} block - block name or block specs\n   * @return {BemEntity|undefined}\n   */\n  findParentBlock: function(block) {\n    const results = this.findParentBlocks(block);\n    return results && results[0];\n  },\n  /**\n   * @param {string|object} elem - elem name or elem specs\n   * @return {BemEntity[]}\n   */\n  findParentElems: function(elem) {\n    // Single elem name?\n    let props = (typeof elem === 'string') ? { elem } : elem;\n    const { domElem, block } = this;\n    const select = 'closest';\n    props = Object.assign({ select, domElem, block }, props);\n    const results = BEMDOM.findEntities(props);\n    return results;\n  },\n  /**\n   * @param {string|object} elem - elem name or elem specs\n   * @return {BemEntity|undefined}\n   */\n  findParentElem: function(elem) {\n    const results = this.findParentElems(elem);\n    return results && results[0];\n  },\n\n  // TODO: findBlockById?\n\n  clearElemsCache: function() {\n    this._elemsCache = null;\n  },\n\n  /** Caching method for find single elem\n   * @param {string} elemName - Elem name\n   * @return {BemEntity|undefined}\n   */\n  _elem: function(elemName) {\n    if (typeof elemName !== 'string') {\n      throw new Error('elem method expecting only element name');\n    }\n    var entity = this._elemsCache && this._elemsCache[elemName];\n    if (!entity) {\n      entity = this.findChildElem(elemName);\n      if (entity) {\n        (this._elemsCache || (this._elemsCache = {}))[elemName] = entity;\n      }\n    }\n    return entity;\n  },\n\n  // Modifiers...\n\n  /** Get all affected modifiers\n   * @return {object}\n   */\n  getAllMods: function() {\n    return this._modsCache || {};\n  },\n\n  /**\n   * @param {string} modName\n   * @return {string} modVal\n   */\n  getMod: function(modName) {\n    var val = this._modsCache[modName];\n    return (val != null) ? val : '';\n  },\n  /**\n   * @param {string} modName\n   * @param {*} modVal\n   * @return {boolean}\n   */\n  hasMod: function(modName, modVal) {\n    // const modVal = this.getMod(modName);\n    // return !!modVal;\n    var typeModVal = typeof modVal;\n    if (typeModVal !== 'undefined' && typeModVal !== 'boolean') {\n      modVal = modVal.toString();\n    }\n    var val = this.getMod(modName);\n    var res = val === (modVal || '');\n    return arguments.length === 1? !res : res;\n  },\n  /**\n   * @param {string} modName\n   * @param {string} [modVal]\n   * @return {object} this\n   */\n  _delModClass: function(modName, modVal = true) {\n    const className = this.getModEntityClassName(modName, modVal);\n    if (this.domElem.hasClass(className)) {\n      this.domElem.removeClass(className);\n    }\n    return this;\n  },\n  /**\n   * @param {string} modName\n   * @param {string} [modVal]\n   * @return {object} this\n   */\n  _setModClass: function(modName, modVal = true) {\n    const className = this.getModEntityClassName(modName, modVal);\n    if (modVal) {\n      if (!this.domElem.hasClass(className)) {\n        this.domElem.addClass(className);\n      }\n    }\n    else {\n      if (this.domElem.hasClass(className)) {\n        this.domElem.removeClass(className);\n      }\n    }\n    return this;\n  },\n  /**\n   * @param {string} modName\n   * @param {string} [modVal='']\n   * @return {object} this\n   */\n  setMod: function(modName, modVal = true) {\n\n    if ((this._processingMods || (this._processingMods = {}))[modName] == null) {\n\n      if (modVal == null || modVal === false) {\n        modVal = '';\n      }\n\n      const oldVal = this._modsCache[modName] || '';\n\n      if (modVal !== oldVal) {\n\n        if (typeof this.beforeSetMod === 'function') {\n          // Check for mod changing availability (only boolean values)\n          if (this.beforeSetMod(modName, modVal, oldVal) === false) {\n            return this;\n          }\n        }\n\n        // TODO: Set before call `beforeSetMod`?\n        this._processingMods[modName] = oldVal;\n\n        this._delModClass(modName, oldVal);\n        this._setModClass(modName, modVal);\n        this._modsCache[modName] = modVal;\n\n        if (typeof this.onSetMod === 'function') {\n          this.onSetMod(modName, modVal, oldVal);\n        }\n\n        // TODO: Emit events\n        var modProps = { modName, modVal, oldVal };\n        this.emit('setMod', modProps);\n        this.emit('setMod_' + modName, modProps);\n        this.emit('setMod_' + modName + '_' + String(modVal), modProps);\n\n      }\n\n      this._processingMods[modName] = null;\n\n    }\n\n    return this;\n\n  },\n  /**\n   * @param {string} modName\n   * @return {object} this\n   */\n  delMod: function(modName) {\n    return this.setMod(modName, '');\n  },\n  /**\n   * @param {string} modName\n   * @return {object} this\n   */\n  toggleMod: function(modName) {\n    var modVal = !this.hasMod(modName);\n    return this.setMod(modName, modVal);\n  },\n\n  // Init/destroy...\n\n  /**\n   * @return {boolean}\n   */\n  wasInited: function() {\n    return !!this.__inited;\n  },\n\n  // Events\n\n  beforeSetMod: function(modName, modVal/* , oldVal */) {\n    if (modName === 'js') {\n      if (modVal === 'inited') {\n        // if (typeof this.beforeInit === 'function') {\n        //   this.beforeInit();\n        // }\n      }\n      else if (!modVal) {\n        // if (typeof this.beforeDestroy === 'function') {\n        //   this.beforeDestroy();\n        // }\n        // if (typeof this.onDestroy === 'function') {\n        //   this.onDestroy();\n        // }\n      }\n    }\n  },\n  onSetMod: function(modName, modVal/* , oldVal */) {\n    if (modName === 'js') {\n      if (modVal === 'inited') {\n        // if (typeof this.onInitMoment === 'function') {\n        //   this.onInitMoment();\n        // }\n        // if (typeof this.onInit === 'function') {\n        //   if (this.block === 'PageHeader' && this.elem === 'UserInfo') {\n        //     console.log(this);\n        //     debugger;\n        //   }\n        //   setTimeout(this.onInit.bind(this), 0);\n        // }\n        // if (typeof this.afterInit === 'function') {\n        //   setTimeout(this.afterInit.bind(this), 0);\n        // }\n      }\n      else if (!modVal) {\n        // if (typeof this.onDestroyMoment === 'function') {\n        //   this.onDestroyMoment();\n        // }\n        // if (typeof this.afterDestroy === 'function') {\n        //   setTimeout(this.afterDestroy.bind(this), 0); // NOTE: WARNING: Use with care!!!\n        // }\n      }\n    }\n  },\n\n});\n\nexport default BemEntity;\n"],"file":"BemEntity.js"}