{"version":3,"sources":["../src/utils.js"],"names":["require","config","elemDelim","modDelim","modValDelim","utils","specialModConditions","modVal","_modVal","_prevModVal","buildSpecialModFn","curModFn","prevModFn","condition","_modName","res1","res2","apply","arguments","buildModFnName","prefix","modName","modFnsToProps","modFns","props","modFn","starModFnName","modValPrefix","substr","convertModHandlersToMethods","beforeSetMod","onSetMod","checkMod","block","prevModVal","_processingMods","hasMod","buildCheckMod","Array","isArray","i","length","changeObjectPrototype","srcObject","tgtProto","setProto","prototype","Object","setPrototypeOf","_quoteReg","s","replace","getRegexps","_regexps","matchBegin","matchId","matchIdGroup","matchRestGroup","blockMatch","RegExp","elemMatch","modNameMatch","modValMatch","parseDomEntityName","entityName","regexps","rest","foundBlock","match","foundElem","elem","foundModName","foundModVal","getEntityName","entityClass","name","getEntityClassName","propsType","Error","findDomEntities","select","domElem","onlyFirst","error","console","selector","results"],"mappings":";;;;;;;;;AAAA;;;;eAKmBA,OAAO,CAAC,UAAD,C;IAAlBC,M,YAAAA,M;;IACAC,S,GAAqCD,M,CAArCC,S;IAAWC,Q,GAA0BF,M,CAA1BE,Q;IAAUC,W,GAAgBH,M,CAAhBG,W;AAEtB,IAAMC,KAAK;AAAG;AAAoB;AAEvC;;AAEA;;AAEAC,EAAAA,oBAAoB,EAAE;AACpB,SAAM,WAASC,MAAT,EAAiBC;AAAO;AAAxB,MAA6C;AACjD,aAAOA,OAAO,KAAKD,MAAnB;AACD,KAHmB;AAIpB,SAAM,WAASA,MAAT,EAAiBC,OAAjB,EAA0BC,WAA1B,EAAuC;AAC3C,aAAOA,WAAW,KAAKF,MAAvB;AACD;AANmB,GANiB;;AAcvC;;;;;;;;;;AAUAG,EAAAA,iBAAiB,EAAE,2BAASH,MAAT,EAAiBI,SAAjB,EAA2BC,SAA3B,EAAsCC,SAAtC,EAAiD;AAClE,QAAID,SAAS,IAAIC,SAAjB,EAA4B;AAC1BF,MAAAA,SAAQ,GAAG,kBAASG,QAAT,EAAmBN,OAAnB,EAA4BC,WAA5B,EAAyC;AAClD,YAAIM,IAAJ,EAAUC,IAAV;;AACA,YAAIJ,SAAJ,EAAe;AACZG,UAAAA,IAAI,GAAGH,SAAS,CAACK,KAAV,CAAgB,IAAhB,EAAsBC,SAAtB,MAAqC,KAA7C;AACD;;AACDL,QAAAA,SAAS,GAAGA,SAAS,GAAGA,SAAS,CAACN,MAAD,EAASC,OAAT,EAAkBC,WAAlB,CAAZ,GAA6C,IAAlE;;AACA,YAAII,SAAJ,EAAe;AACbG,UAAAA,IAAI,GAAIL,SAAQ,CAACM,KAAT,CAAe,IAAf,EAAqBC,SAArB,MAAoC,KAA5C;AACD;;AACD,YAAIH,IAAI,IAAIC,IAAZ,EAAkB;AAChB,iBAAO,KAAP;AACD;AACF,OAZD;AAaD;;AACD,WAAOL,SAAP;AACD,GAzCsC;;AA0CvC;;;;;;;AAOAQ,EAAAA,cAAc,EAAE,wBAASC,MAAT,EAAiBC,OAAjB,EAA0Bd,MAA1B,EAAkC;AAChD,WAAO,OAAOa,MAAP,GACJ,OADI,IAEHC,OAAO,GAAE,MAAMA,OAAR,GAAkB,EAFtB,KAGHd,MAAM,GAAE,MAAMA,MAAR,GAAiB,EAHpB,CAAP;AAID,GAtDsC;;AAuDvC;;;;;;AAMAe,EAAAA,aAAa,EAAE,uBAASF,MAAT,EAAiBG,MAAjB,EAAyBC,KAAzB,EAAgC;AAC7C,QAAI,OAAOD,MAAP,KAAkB,UAAtB,EAAkC;AAChCC,MAAAA,KAAK,CAAC,KAAKL,cAAL,CAAoBC,MAApB,EAA4B,GAA5B,EAAiC,GAAjC,CAAD,CAAL,GAA+CG,MAA/C;AACD,KAFD,MAGK;AACH,UAAIF,OAAJ,EAAad,MAAb,EAAqBkB,KAArB;;AACA,WAAKJ,OAAL,IAAgBE,MAAhB,EAAwB;AACtBE,QAAAA,KAAK,GAAGF,MAAM,CAACF,OAAD,CAAd;;AACA,YAAI,OAAOI,KAAP,KAAiB,UAArB,EAAiC;AAC/BD,UAAAA,KAAK,CAAC,KAAKL,cAAL,CAAoBC,MAApB,EAA4BC,OAA5B,EAAqC,GAArC,CAAD,CAAL,GAAmDI,KAAnD;AACD,SAFD,MAGK;AACH,cAAIC,aAAa,GAAG,KAAKP,cAAL,CAAoBC,MAApB,EAA4BC,OAA5B,EAAqC,GAArC,CAApB;;AACA,eAAKd,MAAL,IAAekB,KAAf,EAAsB;AACpB,gBAAId,QAAQ,GAAGc,KAAK,CAAClB,MAAD,CAApB;AACA,gBAAIoB,YAAY,GAAGpB,MAAM,CAAC,CAAD,CAAzB;;AACA,gBAAGoB,YAAY,KAAK,GAAjB,IAAwBA,YAAY,KAAK,GAAzC,IAAgDpB,MAAM,KAAK,GAA9D,EAAmE;AACjEA,cAAAA,MAAM,KAAK,GAAX,KAAmBA,MAAM,GAAGA,MAAM,CAACqB,MAAP,CAAc,CAAd,CAA5B;AACAJ,cAAAA,KAAK,CAACE,aAAD,CAAL,GAAuB,KAAKhB,iBAAL,CACrBH,MADqB,EAErBI,QAFqB,EAGrBa,KAAK,CAACE,aAAD,CAHgB,EAIrB,KAAKpB,oBAAL,CAA0BqB,YAA1B,CAJqB,CAAvB;AAMD,aARD,MASK;AACHH,cAAAA,KAAK,CAAC,KAAKL,cAAL,CAAoBC,MAApB,EAA4BC,OAA5B,EAAqCd,MAArC,CAAD,CAAL,GAAsDI,QAAtD;AACD;AACF;AACF;AACF;AACF;AACF,GA7FsC;;AA8FvC;;AAEAkB,EAAAA,2BAA2B,EAAE,qCAASL,KAAT,EAAgB;AAC3C,QAAIA,KAAK,CAACM,YAAV,EAAwB;AACtB,WAAKR,aAAL,CAAmB,QAAnB,EAA6BE,KAAK,CAACM,YAAnC,EAAiDN,KAAjD;AACA,aAAOA,KAAK,CAACM,YAAb;AACD;;AAED,QAAIN,KAAK,CAACO,QAAV,EAAoB;AAClB,WAAKT,aAAL,CAAmB,OAAnB,EAA4BE,KAAK,CAACO,QAAlC,EAA4CP,KAA5C;AACA,aAAOA,KAAK,CAACO,QAAb;AACD;AACF,GA1GsC;;AA2GvC;;AAEAC,EAAAA,QAAQ,EAAE,kBAASC,KAAT,EAAgBZ,OAAhB,EAAyBd,MAAzB,EAAiC;AACzC,QAAI2B,UAAU,GAAGD,KAAK,CAACE,eAAN,IAAyBF,KAAK,CAACE,eAAN,CAAsBd,OAAtB,CAA1C,CADyC,CAGzC;;AACA,WAAOd,MAAM,KAAK,GAAX;AACL;AACA0B,IAAAA,KAAK,CAACG,MAAN,CAAaf,OAAb,KAAyBa,UAAU,IAAI,IAFlC,GAGLD,KAAK,CAACG,MAAN,CAAaf,OAAb,EAAsBd,MAAtB,KAAiC2B,UAAU,KAAK3B,MAHlD;AAID,GArHsC;;AAsHvC;;AAEA8B,EAAAA,aAAa,EAAE,uBAAShB,OAAT,EAAkBd,MAAlB,EAA0B;AAAA;;AACvCA,IAAAA,MAAM,GAAGA,MAAM,IAAI,IAAnB,CADuC,CACd;;AACzB,QAAI+B,KAAK,CAACC,OAAN,CAAchC,MAAd,CAAJ,EAA4B;AAC1B,aAAO,UAAC0B,KAAD,EAAW;AAChB,aAAK,IAAIO,CAAC,GAAG,CAAb,EAAgBA,CAAC,GAAGjC,MAAM,CAACkC,MAA3B,EAAmCD,CAAC,EAApC,EAAwC;AACtC,cAAI,KAAI,CAACR,QAAL,CAAcC,KAAd,EAAqBZ,OAArB,EAA8Bd,MAAM,CAACiC,CAAD,CAApC,CAAJ,EAA8C;AAC5C,mBAAO,IAAP;AACD;AACF;AACF,OAND;AAOD,KARD,MASK;AACH,aAAO,UAACP,KAAD,EAAW;AAChB,eAAO,KAAI,CAACD,QAAL,CAAcC,KAAd,EAAqBZ,OAArB,EAA8Bd,MAA9B,CAAP;AACD,OAFD;AAGD;AACF,GAxIsC;AA0IvC;;AAEA;;;;;AAKAmC,EAAAA,qBAAqB,EAAE,+BAASC,SAAT,EAAoBC,QAApB,EAA8B;AACnD,QAAID,SAAJ,EAAe;AACb,UAAME,QAAQ,GAAGD,QAAQ,CAACE,SAAT,IAAsBF,QAAvC;AACAG,MAAAA,MAAM,CAACC,cAAP,CAAsBL,SAAtB,EAAiCE,QAAjC;AACD;;AACD,WAAOF,SAAP;AACD,GAvJsC;AAyJvC;;AAEA;;AAEAM,EAAAA,SAAS,EAAE,mBAASC,CAAT,EAAY;AACrBA,IAAAA,CAAC,GAAGA,CAAC,CACFC,OADC,CACO,QADP,EACiB,MADjB,CAAJ;AAGA,WAAOD,CAAP;AACD,GAlKsC;;AAoKvC;;;AAGAE,EAAAA,UAAU,EAAE,sBAAW;AACrB,QAAK,CAAC,KAAKC,QAAX,EAAqB;AACnB;AACA;AACA;AACA,UAAMC,UAAU,GAAG,GAAnB;AACA,UAAMC,OAAO,GAAG,sBAAhB;AACA,UAAMC,YAAY,GAAG,MAAMD,OAAN,GAAgB,GAArC;AACA,UAAME,cAAc,GAAG,OAAvB;AACA,UAAMC,UAAU,GAAG,IAAIC,MAAJ,CAAWL,UAAU,GAAGE,YAAb,GAA4BC,cAAvC,CAAnB;AACA,UAAMG,SAAS,GAAG,IAAID,MAAJ,CAAWL,UAAU,GAAG,KAAKL,SAAL,CAAe/C,SAAf,CAAb,GAAyCsD,YAAzC,GAAwDC,cAAnE,CAAlB;AACA,UAAMI,YAAY,GAAG,IAAIF,MAAJ,CAAWL,UAAU,GAAG,KAAKL,SAAL,CAAe9C,QAAf,CAAb,GAAwCqD,YAAxC,GAAuDC,cAAlE,CAArB;AACA,UAAMK,WAAW,GAAG,IAAIH,MAAJ,CAAWL,UAAU,GAAG,KAAKL,SAAL,CAAe7C,WAAf,CAAb,GAA2CqD,cAAtD,CAApB;AACA,WAAKJ,QAAL,GAAgB;AACdK,QAAAA,UAAU,EAAVA,UADc;AAEdE,QAAAA,SAAS,EAATA,SAFc;AAGdC,QAAAA,YAAY,EAAZA,YAHc;AAIdC,QAAAA,WAAW,EAAXA;AAJc,OAAhB;AAMD;;AACD,WAAO,KAAKT,QAAZ;AACD,GA5LsC;;AA8LvC;;;;AAIAU,EAAAA,kBAAkB,EAAE,4BAASC,UAAT,EAAqB;AACvC,QAAMC,OAAO,GAAG,KAAKb,UAAL,EAAhB;AACA,QAAM5B,KAAK,GAAG,EAAd;AACA,QAAI0C,IAAJ;AACA,QAAMC,UAAU,GAAGH,UAAU,CAACI,KAAX,CAAiBH,OAAO,CAACP,UAAzB,CAAnB,CAJuC,CAKvC;;AACA,QAAIS,UAAJ,EAAgB;AACd3C,MAAAA,KAAK,CAACS,KAAN,GAAckC,UAAU,CAAC,CAAD,CAAxB;AACAD,MAAAA,IAAI,GAAIC,UAAU,CAAC,CAAD,CAAlB;;AACA,UAAID,IAAJ,EAAU;AACR,YAAMG,SAAS,GAAGH,IAAI,CAACE,KAAL,CAAWH,OAAO,CAACL,SAAnB,CAAlB,CADQ,CAER;;AACA,YAAIS,SAAJ,EAAe;AACb7C,UAAAA,KAAK,CAAC8C,IAAN,GAAaD,SAAS,CAAC,CAAD,CAAtB;AACAH,UAAAA,IAAI,GAAGG,SAAS,CAAC,CAAD,CAAhB;AACD;AACF,OAVa,CAWd;;;AACA,UAAIH,IAAJ,EAAU;AACR,YAAMK,YAAY,GAAGL,IAAI,CAACE,KAAL,CAAWH,OAAO,CAACJ,YAAnB,CAArB;AACArC,QAAAA,KAAK,CAACH,OAAN,GAAgBkD,YAAY,CAAC,CAAD,CAA5B;AACAL,QAAAA,IAAI,GAAGK,YAAY,CAAC,CAAD,CAAnB,CAHQ,CAIR;;AACA,YAAIL,IAAJ,EAAU;AACR,cAAMM,WAAW,GAAGN,IAAI,CAACE,KAAL,CAAWH,OAAO,CAACH,WAAnB,CAApB;AACAtC,UAAAA,KAAK,CAACjB,MAAN,GAAeiE,WAAW,CAAC,CAAD,CAA1B;AACD;;AACD,YAAI,CAAChD,KAAK,CAACjB,MAAP,IAAiBiB,KAAK,CAACjB,MAAN,KAAiB,MAAtC,EAA8C;AAC5CiB,UAAAA,KAAK,CAACjB,MAAN,GAAe,IAAf;AACD;AACF;AACF;;AACD,WAAOiB,KAAP;AACD,GAnOsC;;AAqOvC;;;;AAIAiD,EAAAA,aAAa,EAAE,uBAASC,WAAT,EAAsB;AACnC,QAAIC,IAAI,GAAGD,WAAW,CAACzC,KAAvB;;AACA,QAAIyC,WAAW,CAACJ,IAAhB,EAAsB;AACpBK,MAAAA,IAAI,IAAIzE,SAAS,GAAGwE,WAAW,CAACJ,IAAhC;AACD;;AACD,WAAOK,IAAP;AACD,GA/OsC;;AAiPvC;;;;;;;;AAQAC,EAAAA,kBAAkB,EAAE,4BAASpD,KAAT,EAAgB;AAClC,QAAIqD,SAAS,WAAUrD,KAAV,CAAb,CADkC,CAElC;;;AACA,QAAIA,KAAK,IAAIqD,SAAS,KAAK,QAA3B,EAAqC;AACnC,aAAOrD,KAAP;AACD,KAFD,CAGA;AAHA,SAIK,IAAIA,KAAK,IAAIqD,SAAS,KAAK,QAA3B,EAAqC;AAAA,YAChC5C,KADgC,GACCT,KADD,CAChCS,KADgC;AAAA,YACzBqC,IADyB,GACC9C,KADD,CACzB8C,IADyB;AAAA,YACnBjD,OADmB,GACCG,KADD,CACnBH,OADmB;AAAA,YACVd,MADU,GACCiB,KADD,CACVjB,MADU;AAExC,YAAIoE,IAAI,GAAG1C,KAAX;;AACA,YAAIqC,IAAJ,EAAU;AACRK,UAAAA,IAAI,IAAIzE,SAAS,GAAGoE,IAApB;AACD;;AACD,YAAIjD,OAAO,IAAId,MAAM,KAAK,KAA1B,EAAiC;AAC/BoE,UAAAA,IAAI,IAAIxE,QAAQ,GAAGkB,OAAnB,CAD+B,CAE/B;;AACA,cAAId,MAAM,KAAK,IAAX,IAAmBA,MAAM,IAAI,IAAjC,EAAuC;AACrCoE,YAAAA,IAAI,IAAIxE,QAAQ,GAAGI,MAAnB;AACD;AACF;;AACD,eAAOoE,IAAP;AACD,OAdI,MAeA;AACH,cAAM,IAAIG,KAAJ,CAAU,+CAA+CD,SAAzD,CAAN;AACD;AACF,GAlRsC;AAoRvC;;AAEA;;;;;;;;AAQAE,EAAAA,eAAe,EAAE,2BAAwD;AAAA,QAA/CC,MAA+C,uEAAxC,MAAwC;AAAA,QAAhCC,OAAgC;AAAA,QAAvBjB,UAAuB;AAAA,QAAXkB,SAAW;;AACvE,QAAI,QAAOlB,UAAP,MAAsB,QAA1B,EAAoC;AAClCA,MAAAA,UAAU,GAAG,KAAKY,kBAAL,CAAwBZ,UAAxB,CAAb;AACD;;AACD,QAAI,CAACiB,OAAL,EAAc;AACZ,UAAME,KAAK,GAAG,IAAIL,KAAJ,CAAU,uBAAV,CAAd;AACAM,MAAAA,OAAO,CAACD,KAAR,CAAcA,KAAd,EAFY,CAEU;;AACtB;;AAAU,eAHE,CAGQ;;AACpB,YAAMA,KAAN;AACD;;AACD,QAAI,OAAOF,OAAO,CAACD,MAAD,CAAd,KAA2B,UAA/B,EAA2C;AACzC,UAAMG,MAAK,GAAG,IAAIL,KAAJ,CAAU,qCAAqCE,MAA/C,CAAd;;AACAI,MAAAA,OAAO,CAACD,KAAR,CAAcA,MAAd,EAFyC,CAEnB;;AACtB;;AAAU,eAH+B,CAGrB;;AACpB,YAAMA,MAAN;AACD;;AACD,QAAIE,QAAQ,GAAG,MAAMrB,UAArB;;AACA,QAAIkB,SAAJ,EAAe;AACbG,MAAAA,QAAQ,IAAI,QAAZ;AACD;;AACD,QAAMC,OAAO,GAAGL,OAAO,CAACD,MAAD,CAAP,CAAgBK,QAAhB,CAAhB;AACA,WAAOC,OAAP;AACD;AApTsC,CAAlC","sourcesContent":["/** @module utils\n *  @since 2019.03.09, 22:54\n *  @changed 2019.06.25, 10:27\n */\n\nconst { config } = require('./config');\nconst { elemDelim, modDelim, modValDelim } = config;\n\nexport const utils = /** @lends utils */ {\n\n  // Misc utils (from i-bem)\n\n  /**\n   */\n  specialModConditions: {\n    '!' : function(modVal, _modVal/* , _prevModVal */) {\n      return _modVal !== modVal;\n    },\n    '~' : function(modVal, _modVal, _prevModVal) {\n      return _prevModVal === modVal;\n    }\n  },\n  /**\n   * Builds the function for the handler method for setting a modifier\n   * for special syntax\n   * @param {String} modVal Declared modifier value\n   * @param {Function} curModFn Declared modifier handler\n   * @param {Function} [prevModFn] Previous handler\n   * @param {Function} [condition] Condition function\n   * (called with declared, set and previous modifier values)\n   * @returns {Function}\n   */\n  buildSpecialModFn: function(modVal, curModFn, prevModFn, condition) {\n    if (prevModFn || condition) {\n      curModFn = function(_modName, _modVal, _prevModVal) {\n        var res1, res2;\n        if (prevModFn) {\n          (res1 = prevModFn.apply(this, arguments) === false);\n        }\n        condition = condition ? condition(modVal, _modVal, _prevModVal) : true;\n        if (condition) {\n          res2 = (curModFn.apply(this, arguments) === false);\n        }\n        if (res1 || res2) {\n          return false;\n        }\n      };\n    }\n    return curModFn;\n  },\n  /**\n   * Builds the name of the handler method for setting a modifier\n   * @param {String} prefix\n   * @param {String} modName Modifier name\n   * @param {String} modVal Modifier value\n   * @returns {String}\n   */\n  buildModFnName: function(prefix, modName, modVal) {\n    return '__' + prefix +\n       '__mod' +\n       (modName? '_' + modName : '') +\n       (modVal? '_' + modVal : '');\n  },\n  /**\n   * Transforms a hash of modifier handlers to methods\n   * @param {String} prefix\n   * @param {Object} modFns\n   * @param {Object} props\n   */\n  modFnsToProps: function(prefix, modFns, props) {\n    if (typeof modFns === 'function') {\n      props[this.buildModFnName(prefix, '*', '*')] = modFns;\n    }\n    else {\n      var modName, modVal, modFn;\n      for (modName in modFns) {\n        modFn = modFns[modName];\n        if (typeof modFn === 'function') {\n          props[this.buildModFnName(prefix, modName, '*')] = modFn;\n        }\n        else {\n          var starModFnName = this.buildModFnName(prefix, modName, '*');\n          for (modVal in modFn) {\n            var curModFn = modFn[modVal];\n            var modValPrefix = modVal[0];\n            if(modValPrefix === '!' || modValPrefix === '~' || modVal === '*') {\n              modVal === '*' || (modVal = modVal.substr(1));\n              props[starModFnName] = this.buildSpecialModFn(\n                modVal,\n                curModFn,\n                props[starModFnName],\n                this.specialModConditions[modValPrefix]\n              );\n            }\n            else {\n              props[this.buildModFnName(prefix, modName, modVal)] = curModFn;\n            }\n          }\n        }\n      }\n    }\n  },\n  /**\n   */\n  convertModHandlersToMethods: function(props) {\n    if (props.beforeSetMod) {\n      this.modFnsToProps('before', props.beforeSetMod, props);\n      delete props.beforeSetMod;\n    }\n\n    if (props.onSetMod) {\n      this.modFnsToProps('after', props.onSetMod, props);\n      delete props.onSetMod;\n    }\n  },\n  /**\n   */\n  checkMod: function(block, modName, modVal) {\n    var prevModVal = block._processingMods && block._processingMods[modName];\n\n    // check if a block has either current or previous modifier value equal to passed modVal\n    return modVal === '*'?\n      /* jshint eqnull: true */\n      block.hasMod(modName) || prevModVal != null :\n      block.hasMod(modName, modVal) || prevModVal === modVal;\n  },\n  /**\n   */\n  buildCheckMod: function(modName, modVal) {\n    modVal = modVal || true; // TODO: To check for special mod values ('', '*', false, etc)???\n    if (Array.isArray(modVal) ) {\n      return (block) => {\n        for (var i = 0; i < modVal.length; i++) {\n          if (this.checkMod(block, modName, modVal[i])) {\n            return true;\n          }\n        }\n      };\n    }\n    else {\n      return (block) => {\n        return this.checkMod(block, modName, modVal);\n      };\n    }\n  },\n\n  // Entities methods...\n\n  /**\n   * @param {object} srcObject\n   * @param {object} tgtProto\n   * @return {object} srcObject\n   */\n  changeObjectPrototype: function(srcObject, tgtProto) {\n    if (srcObject) {\n      const setProto = tgtProto.prototype || tgtProto;\n      Object.setPrototypeOf(srcObject, setProto);\n    }\n    return srcObject;\n  },\n\n  // Identification...\n\n  /** TODO: Quote string for use as part of regexp (quote special symbols: '.*+'\n   */\n  _quoteReg: function(s) {\n    s = s\n      .replace(/[.*+]/g, '\\\\$1')\n    ;\n    return s;\n  },\n\n  /** Get or compile regexps for search/parse methods\n   * @return {object}\n   */\n  getRegexps: function() {\n    if ( !this._regexps) {\n      // Parse entities names regexps...\n      // TODO 2019.03.14, 20:02 -- Construct on demand into object property?\n      // const matchBoundary = '\\\\b';\n      const matchBegin = '^';\n      const matchId = '[A-Za-z][A-Za-z0-9]*';\n      const matchIdGroup = '(' + matchId + ')';\n      const matchRestGroup = '(.*)$';\n      const blockMatch = new RegExp(matchBegin + matchIdGroup + matchRestGroup);\n      const elemMatch = new RegExp(matchBegin + this._quoteReg(elemDelim) + matchIdGroup + matchRestGroup);\n      const modNameMatch = new RegExp(matchBegin + this._quoteReg(modDelim) + matchIdGroup + matchRestGroup);\n      const modValMatch = new RegExp(matchBegin + this._quoteReg(modValDelim) + matchRestGroup);\n      this._regexps = {\n        blockMatch,\n        elemMatch,\n        modNameMatch,\n        modValMatch,\n      };\n    }\n    return this._regexps;\n  },\n\n  /**\n   * @param {string} entityName\n   * @return {object}\n   */\n  parseDomEntityName: function(entityName) {\n    const regexps = this.getRegexps();\n    const props = {};\n    let rest;\n    const foundBlock = entityName.match(regexps.blockMatch);\n    // block?\n    if (foundBlock) {\n      props.block = foundBlock[1];\n      rest =  foundBlock[2];\n      if (rest) {\n        const foundElem = rest.match(regexps.elemMatch);\n        // elem?\n        if (foundElem) {\n          props.elem = foundElem[1];\n          rest = foundElem[2];\n        }\n      }\n      // mod?\n      if (rest) {\n        const foundModName = rest.match(regexps.modNameMatch);\n        props.modName = foundModName[1];\n        rest = foundModName[2];\n        // modVal?\n        if (rest) {\n          const foundModVal = rest.match(regexps.modValMatch);\n          props.modVal = foundModVal[1];\n        }\n        if (!props.modVal || props.modVal === 'true') {\n          props.modVal = true;\n        }\n      }\n    }\n    return props;\n  },\n\n  /** Get block/elem name without mod specificators\n   * @param {bemProto} entityClass\n   * @return {string}\n   */\n  getEntityName: function(entityClass) {\n    let name = entityClass.block;\n    if (entityClass.elem) {\n      name += elemDelim + entityClass.elem;\n    }\n    return name;\n  },\n\n  /**\n   * @param {object|string} props\n   * @param {string} props.block\n   * @param {string} [props.elem]\n   * @param {string} [props.modName]\n   * @param {string|boolean} [props.modVal=true]\n   * @return {string}\n   */\n  getEntityClassName: function(props) {\n    var propsType = typeof props;\n    // If already class name (string)\n    if (props && propsType === 'string') {\n      return props;\n    }\n    // If complex object...\n    else if (props && propsType === 'object') {\n      const { block, elem, modName, modVal } = props;\n      var name = block;\n      if (elem) {\n        name += elemDelim + elem;\n      }\n      if (modName && modVal !== false) {\n        name += modDelim + modName;\n        // const modValStr = (modVal === true || modVal == null) ? 'true' : String(modVal);\n        if (modVal !== true && modVal != null) {\n          name += modDelim + modVal;\n        }\n      }\n      return name;\n    }\n    else {\n      throw new Error('getEntityClassName: Undefined props type: ' + propsType);\n    }\n  },\n\n  // Traversing...\n\n  /**\n   * TODO Cache results? + cache reset?\n   * @param {string} [select='find']\n   * @param {jQuery} domElem\n   * @param {string} entityName\n   * @param {boolean} [onlyFirst]\n   * @return {jQuery}\n   */\n  findDomEntities: function(select='find', domElem, entityName, onlyFirst) {\n    if (typeof entityName === 'object') {\n      entityName = this.getEntityClassName(entityName);\n    }\n    if (!domElem) {\n      const error = new Error('domElem not specified');\n      console.error(error); // eslint-disable-line no-console\n      /*DEBUG*/ debugger; // eslint-disable-line no-debugger\n      throw error;\n    }\n    if (typeof domElem[select] !== 'function') {\n      const error = new Error('Unknown jQuery traverse method: ' + select);\n      console.error(error); // eslint-disable-line no-console\n      /*DEBUG*/ debugger; // eslint-disable-line no-debugger\n      throw error;\n    }\n    let selector = '.' + entityName;\n    if (onlyFirst) {\n      selector += ':first';\n    }\n    const results = domElem[select](selector);\n    return results;\n  },\n\n};\n"],"file":"utils.js"}