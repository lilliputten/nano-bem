{"version":3,"sources":["../src/BemElem.js"],"names":["inherit","require","BemEntity","BEMDOM","BemElem","__constructor","props","__base","apply","arguments","entityClass","elem","onInit","block","blockEntity","findParentBlock","error","Error","console","__name","BemElemProto"],"mappings":";;;;;;;;;AAAA;;;;;AAMA,IAAMA,OAAO,GAAGC,OAAO,CAAC,SAAD,CAAvB;;AAEA,IAAMC,SAAS,GAAGD,OAAO,CAAC,aAAD,CAAP,WAAlB;;eACmBA,OAAO,CAAC,UAAD,C;IAAlBE,M,YAAAA,M;AAER;;;AACA,IAAMC,OAAO,GAAGJ,OAAO,CAACE,SAAD;AAAY;AAA+B;AAEhEG,EAAAA,aAAa,EAAE,yBAA4B;AAAA,mFAAJ,EAAI;AAAA,QAAdC,KAAc;;AACzC,SAAKC,MAAL,IAAe,KAAKA,MAAL,CAAYC,KAAZ,CAAkB,IAAlB,EAAwBC,SAAxB,CAAf;AADyC,QAEjCC,WAFiC,GAEjBJ,KAFiB,CAEjCI,WAFiC;;AAGzC,QAAIA,WAAJ,EAAiB;AAAA,UACPC,IADO,GACED,WADF,CACPC,IADO;AAEf,WAAKA,IAAL,GAAYA,IAAZ;AACD;AACF,GAT+D;AAWhEC,EAAAA,MAAM,EAAE,kBAAW;AACjB;AACA,QAAIC,KAAK,GAAG,KAAKA,KAAjB;AACA,QAAIC,WAAW,GAAG,KAAKC,eAAL,CAAqBF,KAArB,CAAlB;;AACA,QAAI,CAACC,WAAL,EAAkB;AAChB,UAAIE,KAAK,GAAG,IAAIC,KAAJ,CAAU,0BAAV,CAAZ;AACAC,MAAAA,OAAO,CAACF,KAAR,CAAcA,KAAd,EAFgB,CAEM;;AACtB;;AAAU,eAHM,CAGI;;AACpB,YAAMA,KAAN;AACD,KATgB,CAUjB;;;AACA,SAAKF,WAAL,GAAmBA,WAAnB;AACA,SAAKP,MAAL,IAAe,KAAKA,MAAL,EAAf;AACD;AAxB+D,CAA3C,CAAvB;AA4BA;;AAAUH,OAAO,CAACe,MAAR,GAAiB,SAAjB;AAEV;;;;;;;;AAOAhB,MAAM,CAACiB,YAAP,GAAsBhB,OAAtB;eAEeA,O","sourcesContent":["/** @module BemElem\n *  @description Bem element class\n *  @since 2019.03.14, 14:39\n *  @changed 2019.03.16, 00:19\n */\n\nconst inherit = require('inherit');\n\nconst BemEntity = require('./BemEntity').default;\nconst { BEMDOM } = require('./BEMDOM');\n\n/** inherit BemElem */\nconst BemElem = inherit(BemEntity, /** @lends BemElem.prototype */{\n\n  __constructor: function({ ...props } = {}) {\n    this.__base && this.__base.apply(this, arguments);\n    const { entityClass } = props;\n    if (entityClass) {\n      const { elem } = entityClass;\n      this.elem = elem;\n    }\n  },\n\n  onInit: function() {\n    // var elem = this.elem;\n    var block = this.block;\n    var blockEntity = this.findParentBlock(block);\n    if (!blockEntity) {\n      var error = new Error('Cannot find parent block');\n      console.error(error); // eslint-disable-line no-console\n      /*DEBUG*/ debugger; // eslint-disable-line no-debugger\n      throw error;\n    }\n    // Save this block entity reference\n    this.blockEntity = blockEntity;\n    this.__base && this.__base();\n  },\n\n});\n\n/*DEBUG*/ BemElem.__name = 'BemElem';\n\n/* NOTE: Make some architecture hack (due to cyclic references)\n * TODO 2019.06.25, 13:08 -- We have the following conflict:\n *   - BemBlock uses BemEntity,\n *   - BemEntity uses BEMDOM (for findEntities, getUniqueId),\n *   - BEMDOM requires BemBlock and BemElem class prototypes to creating entities.\n * It need to be resolved.\n */\nBEMDOM.BemElemProto = BemElem;\n\nexport default BemElem;\n"],"file":"BemElem.js"}