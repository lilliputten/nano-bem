{"version":3,"sources":["../src/BemBlock.js"],"names":["inherit","require","BemEntity","BEMDOM","BemBlock","__constructor","__base","apply","arguments","__name","BemBlockProto"],"mappings":";;;;;;;AAAA;;;;;AAMA,IAAMA,OAAO,GAAGC,OAAO,CAAC,SAAD,CAAvB;;AACA,IAAMC,SAAS,GAAGD,OAAO,CAAC,aAAD,CAAP,WAAlB;;eACmBA,OAAO,CAAC,UAAD,C;IAAlBE,M,YAAAA,M;AAER;;;AACA,IAAMC,QAAQ,GAAGJ,OAAO,CAACE,SAAD;AAAY;AAAgC;AAElEG,EAAAA,aAAa,EAAE;AAAS;AAAiC;AACvD,SAAKC,MAAL,IAAe,KAAKA,MAAL,CAAYC,KAAZ,CAAkB,IAAlB,EAAwBC,SAAxB,CAAf;AACD;AAJiE,CAA5C,CAAxB;AAQA;;AAAUJ,QAAQ,CAACK,MAAT,GAAkB,UAAlB;AAEV;;;;;;;;AAOAN,MAAM,CAACO,aAAP,GAAuBN,QAAvB;eAEeA,Q","sourcesContent":["/** @module BemBlock\n *  @description Bem block class\n *  @since 2019.03.09, 22:54\n *  @changed 2019.03.16, 00:19\n */\n\nconst inherit = require('inherit');\nconst BemEntity = require('./BemEntity').default;\nconst { BEMDOM } = require('./BEMDOM');\n\n/** inherit BemBlock */\nconst BemBlock = inherit(BemEntity, /** @lends BemBlock.prototype */{\n\n  __constructor: function(/* { params, ...props } = {} */) {\n    this.__base && this.__base.apply(this, arguments);\n  },\n\n});\n\n/*DEBUG*/ BemBlock.__name = 'BemBlock';\n\n/* NOTE: Make some architecture hack (due to cyclic references)\n * TODO 2019.06.25, 13:08 -- We have the following conflict:\n *   - BemBlock uses BemEntity,\n *   - BemEntity uses BEMDOM (for findEntities, getUniqueId),\n *   - BEMDOM requires BemBlock and BemElem class prototypes to creating entities.\n * It need to be resolved.\n */\nBEMDOM.BemBlockProto = BemBlock;\n\nexport default BemBlock;\n"],"file":"BemBlock.js"}