{"version":3,"sources":["../src/MicroEvents.js"],"names":["inherit","require","MicroEvents","__constructor","__base","apply","arguments","_handlers","_add","id","handlerData","handlers","push","on","cb","ctx","once","off","cbs","Array","isArray","found","reduce","item","n","splice","un","emit","length","args","from","slice","i","cbMethod","bind"],"mappings":"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","sourcesContent":["/** @module MicroEvents\n *  @class MicroEvents\n *  @desc Minimal events manager engine\n *  @since 2019.06.06, 09:32\n *  @changed 2019.06.27, 08:27\n *\n * TODO:\n *   - 2019.06.27, 11:49 -- Tests\n *     @see:\n *       - https://github.com/psfe/micro-event/blob/master/test.js\n */\n\nconst inherit = require('inherit');\n\nconst MicroEvents = inherit( /** @lends MicroEvents.prototype */ {\n\n  __constructor: function() {\n\n    this.__base && this.__base.apply(this, arguments);\n\n    /** Event handlers storage\n     * @type {Object}\n     */\n    this._handlers = {};\n\n  },\n\n  /** Low-level add handler method\n   * @param {String} id\n   * @param {Object] handlerData\n   */\n  _add: function(id, handlerData) {\n    if (handlerData) {\n      const handlers = this._handlers[id] || (this._handlers[id] = []);\n      handlers.push(handlerData);\n    }\n    return this;\n  },\n\n  /** Add event handler\n   * @param {String} id\n   * @param {Function} cb\n   * @param {Object} [ctx]\n   * @return {Object} this\n   */\n  on: function(id, cb, ctx) {\n    if (typeof cb === 'function') {\n      this._add(id, { cb, ctx });\n    }\n    return this;\n  },\n\n  /** Add once-running event handler\n   * @param {String} id\n   * @param {Function} cb\n   * @param {Object} [ctx]\n   * @return {Object} this\n   */\n  once: function(id, cb, ctx) {\n    if (typeof cb === 'function') {\n      this._add(id, { cb, ctx, once: true });\n    }\n    return this;\n  },\n\n  /** Remove event handler\n   * @param {String} id\n   * @param {Function} cb\n   * @param {Object} [ctx]\n   * @return {Object} this\n   */\n  off: function(id, cb, ctx) {\n    const cbs = this._handlers[id];\n    if (typeof cb === 'function' && Array.isArray(cbs)) {\n      // Find last mathing handler\n      const found = cbs.reduce((found, item, n) => {\n        // Compare cb & ctx\n        if (cb == item.cb && ((!ctx && !item.ctx) || ctx === item.ctx)) {\n          found = n;\n        }\n        return found;\n      }, -1);\n      // Remove if found\n      if (found !== -1) {\n        cbs.splice(found, 1);\n      }\n    }\n    return this;\n  },\n\n  /** Synonym for `off`\n   */\n  un: function(/* id, cb, ctx */) {\n    return this.off.apply(this, arguments);\n  },\n\n  /** Emit event\n   * @param {String} id\n   * @param {*} [args]\n   * @return {Object} this\n   */\n  emit: function(id/* , ...args */) {\n    const cbs = this._handlers[id];\n    if (Array.isArray(cbs) && cbs.length) {\n      // Using arguments -> args\n      const args = Array.from(arguments).slice(1);\n      // Traverse in reversed oreder (if removing `once` handlers, all other stay intact)\n      for (let i = cbs.length - 1; i >= 0; i--) {\n        const { cb, ctx, once } = cbs[i];\n        if (typeof cb === 'function') {\n          // Bind to context if specified\n          const cbMethod = (ctx) ? cb.bind(ctx) : cb;\n          // Apply to arguments\n          cbMethod.apply(this, args);\n          // Remove if `once`\n          if (once) {\n            cbs.splice(i, 1);\n          }\n        }\n      }\n    }\n    return this;\n  },\n\n});\n\nexport default MicroEvents;\n"],"file":"MicroEvents.js"}