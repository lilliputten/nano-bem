{"version":3,"sources":["../src/Events.js"],"names":["LiteEvents","require","Events","call","prototype","Object","create","constructor","_on","on","id","func","ctx","error","Error","console","bind","_once","once","_off","off","un"],"mappings":";;;;;;;AAAA;;;;;AAMA;AAEA;AACA;AACA,IAAMA,UAAU,GAAGC,OAAO,CAAC,YAAD,CAA1B,C,CAEA;;;AACA,IAAMC,MAAM,GAAG,SAATA,MAAS,GAAW;AACxBF,EAAAA,UAAU,CAACG,IAAX,CAAgB,IAAhB;AACD,CAFD;;AAGAD,MAAM,CAACE,SAAP,GAAmBC,MAAM,CAACC,MAAP,CAAcN,UAAU,CAACI,SAAzB,CAAnB;AACAF,MAAM,CAACE,SAAP,CAAiBG,WAAjB,GAA+BL,MAA/B,C,CAEA;;AAEA;;;;;;;AAMAA,MAAM,CAACE,SAAP,CAAiBI,GAAjB,GAAuBN,MAAM,CAACE,SAAP,CAAiBK,EAAxC,C,CAA4C;;AAC5CP,MAAM,CAACE,SAAP,CAAiBK,EAAjB,GAAsB,UAASC,EAAT,EAAaC,IAAb,EAAmBC,GAAnB,EAAwB;AAC5C,MAAI,CAACD,IAAL,EAAW;AACT,QAAIE,KAAK,GAAG,IAAIC,KAAJ,CAAU,qCAAV,CAAZ;AACAC,IAAAA,OAAO,CAACF,KAAR,CAAc,kBAAd,EAAkCA,KAAlC,EAFS,CAEiC;;AAC1C;;AAAU,aAHD,CAGW;;AACpB,UAAMA,KAAN;AACD;;AACD,MAAI,OAAOF,IAAP,KAAgB,UAAhB,IAA8BC,GAAlC,EAAuC;AACrCD,IAAAA,IAAI,GAAGA,IAAI,CAACK,IAAL,CAAUJ,GAAV,CAAP;AACD;;AACD,SAAO,KAAKJ,GAAL,CAASE,EAAT,EAAaC,IAAb,CAAP;AACD,CAXD;AAaA;;;;;;;;AAMAT,MAAM,CAACE,SAAP,CAAiBa,KAAjB,GAAyBf,MAAM,CAACE,SAAP,CAAiBc,IAA1C,C,CAAgD;;AAChDhB,MAAM,CAACE,SAAP,CAAiBc,IAAjB,GAAwB,UAASR,EAAT,EAAaC,IAAb,EAAmBC,GAAnB,EAAwB;AAC9C,MAAI,CAACD,IAAL,EAAW;AACT,QAAIE,KAAK,GAAG,IAAIC,KAAJ,CAAU,qCAAV,CAAZ;AACAC,IAAAA,OAAO,CAACF,KAAR,CAAc,oBAAd,EAAoCA,KAApC,EAFS,CAEmC;;AAC5C;;AAAU,aAHD,CAGW;;AACpB,UAAMA,KAAN;AACD;;AACD,MAAI,OAAOF,IAAP,KAAgB,UAAhB,IAA8BC,GAAlC,EAAuC;AACrCD,IAAAA,IAAI,GAAGA,IAAI,CAACK,IAAL,CAAUJ,GAAV,CAAP;AACD;;AACD,SAAO,KAAKK,KAAL,CAAWP,EAAX,EAAeC,IAAf,CAAP;AACD,CAXD;AAaA;;;;;;;;AAMAT,MAAM,CAACE,SAAP,CAAiBe,IAAjB,GAAwBjB,MAAM,CAACE,SAAP,CAAiBgB,GAAzC,C,CAA8C;;AAC9ClB,MAAM,CAACE,SAAP,CAAiBgB,GAAjB,GAAuB,UAASV,EAAT,EAAaC,IAAb,EAAmBC,GAAnB,EAAwB;AAC7C,MAAI,CAACD,IAAL,EAAW;AACT,QAAIE,KAAK,GAAG,IAAIC,KAAJ,CAAU,qCAAV,CAAZ;AACAC,IAAAA,OAAO,CAACF,KAAR,CAAc,kBAAd,EAAkCA,KAAlC,EAFS,CAEiC;;AAC1C;;AAAU,aAHD,CAGW;;AACpB,UAAMA,KAAN;AACD;;AACD,MAAI,OAAOF,IAAP,KAAgB,UAAhB,IAA8BC,GAAlC,EAAuC;AACrCD,IAAAA,IAAI,GAAGA,IAAI,CAACK,IAAL,CAAUJ,GAAV,CAAP;AACD;;AACD,SAAO,KAAKO,IAAL,CAAUT,EAAV,EAAcC,IAAd,CAAP;AACD,CAXD;;AAYAT,MAAM,CAACE,SAAP,CAAiBiB,EAAjB,GAAsBnB,MAAM,CAACE,SAAP,CAAiBgB,GAAvC,C,CAA4C;;eAG7BlB,M","sourcesContent":["/** @module Events\n *  @description Events\n *  @since 2019.04.01, 16:22\n *  @changed 2019.06.11, 10:26\n */\n\n// require('lib/polyfills');\n\n// - http://kawanet.github.io/event-lite/EventLite.html\n// - https://www.npmjs.com/package/event-lite\nconst LiteEvents = require('event-lite');\n\n// Extends LiteEvents...\nconst Events = function() {\n  LiteEvents.call(this);\n};\nEvents.prototype = Object.create(LiteEvents.prototype);\nEvents.prototype.constructor = Events;\n\n// Adding context props\n\n/** Add event handler\n * @param {string} id - Event id\n * @param {function} func - Handler function\n * @param {object} [ctx] - Context for func\n * @return {Events} Self for method chaining\n */\nEvents.prototype._on = Events.prototype.on; // Store original method\nEvents.prototype.on = function(id, func, ctx) {\n  if (!func) {\n    var error = new Error('Events: callback must be a function');\n    console.error('Events:on: error', error); // eslint-disable-line no-console\n    /*DEBUG*/ debugger; // eslint-disable-line no-debugger\n    throw error;\n  }\n  if (typeof func === 'function' && ctx) {\n    func = func.bind(ctx);\n  }\n  return this._on(id, func);\n};\n\n/** Add once-calling event handler\n * @param {string} id - Event id\n * @param {function} func - Handler function\n * @param {object} [ctx] - Context for func\n * @return {Events} Self for method chaining\n */\nEvents.prototype._once = Events.prototype.once; // Store original method\nEvents.prototype.once = function(id, func, ctx) {\n  if (!func) {\n    var error = new Error('Events: callback must be a function');\n    console.error('Events:once: error', error); // eslint-disable-line no-console\n    /*DEBUG*/ debugger; // eslint-disable-line no-debugger\n    throw error;\n  }\n  if (typeof func === 'function' && ctx) {\n    func = func.bind(ctx);\n  }\n  return this._once(id, func);\n};\n\n/** Remove event handler\n * @param {string} [id] - Event id\n * @param {function} [func] - Handler function\n * @param {object} [ctx] - Context for func\n * @return {Events} Self for method chaining\n */\nEvents.prototype._off = Events.prototype.off; // Store original method\nEvents.prototype.off = function(id, func, ctx) {\n  if (!func) {\n    var error = new Error('Events: callback must be a function');\n    console.error('Events:on: error', error); // eslint-disable-line no-console\n    /*DEBUG*/ debugger; // eslint-disable-line no-debugger\n    throw error;\n  }\n  if (typeof func === 'function' && ctx) {\n    func = func.bind(ctx);\n  }\n  return this._off(id, func);\n};\nEvents.prototype.un = Events.prototype.off; // Syn\n\n\nexport default Events;\n"],"file":"Events.js"}